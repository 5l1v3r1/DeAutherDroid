package spacehunn.exploitr.deautherwebgui;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.util.Log;

import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.List;

public class Receivers {

    private static List<BroadcastReceiver> receivers = new ArrayList<>();
    private static WeakReference<Receivers> ref;
    private Context context;

    private Receivers(Context context) {
        this.context = context;
    }

    public static synchronized Receivers init(Context context) {
        if (ref == null) {
            ref = new WeakReference<>(new Receivers(context));
            receivers = new ArrayList<>();
            return ref.get();
        } else {
            return ref.get();
        }
    }

    public void registerReceiver(BroadcastReceiver receiver, IntentFilter intentFilter) {
        receivers.add(receiver);
        Intent intent = context.registerReceiver(receiver, intentFilter);
        Log.i(getClass().getSimpleName(), "registered receiver: " + receiver + "  with filter: " + intentFilter);
        Log.i(getClass().getSimpleName(), "receiver Intent: " + intent);
    }

    private boolean isReceiverRegistered(BroadcastReceiver receiver) {
        boolean registered = receivers.contains(receiver);
        Log.i(getClass().getSimpleName(), "is receiver " + receiver + " registered? " + registered);
        return registered;
    }

    public void unregisterReceiver(BroadcastReceiver receiver) {
        if (isReceiverRegistered(receiver)) {
            receivers.remove(receiver);
            context.unregisterReceiver(receiver);
            Log.i(getClass().getSimpleName(), "unregistered receiver: " + receiver);
        }
    }
}
